# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $x_forwarded_proto {
default $http_x_forwarded_proto;
''      $scheme;
}

# Check if a X-Forwarded-Host header (set by reverse-proxy) is already present. If not take the value of the 'Host' header.
map $http_x_forwarded_host $x_forwarded_host {
    default $http_x_forwarded_host;
    ""      $http_host;
}

server {
    listen       80;
    server_name  _;
    client_max_body_size $CLIENT_MAX_BODY_SIZE;
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    # 127.0.0.11 is DNS set up by Docker, see:
    # https://docs.docker.com/engine/userguide/networking/configure-dns/
    # https://github.com/moby/moby/issues/20026
    resolver $RESOLVERS valid=10s ipv6=off;
    set $upstream $UPSTREAM_HTTP_ADDRESS;

    location / {
        proxy_pass $upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $x_forwarded_host;
        proxy_set_header X-Forwarded-Proto $x_forwarded_proto;
        # add support for websockets
        proxy_set_header Upgrade $http_upgrade; 
        proxy_set_header Connection "upgrade"; 
        proxy_http_version 1.1;
    }
}

